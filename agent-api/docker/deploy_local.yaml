apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-api
spec:
  selector:
    matchLabels:
      app: agent-api
  replicas: 1
  template:
    metadata:
      labels:
        app: agent-api
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/hostname: docker-desktop
      containers:
        - name: api
          image: jerry9916/agent-api:latest
          command: ["sh", "-c", "python3 app.py"]
          imagePullPolicy: IfNotPresent
          env:
            - name: KAFKA_CONSUMER_ENABLE
              value: '1'
            - name: KAFKA_SERVERS
              value: '172.20.10.3:9092'
          ports:
            - containerPort: 8188
          volumeMounts:
            - mountPath: /root/agent-api
              name: api-code
        - name: nginx
          image: nginx:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8088
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: nginx-config
              subPath: default.conf
            - mountPath: /usr/share/nginx/html
              name: nginx-root
      volumes:
        - name: api-code
          hostPath:
            path: /Users/xiajie01/Develop/acg/agent-api
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-configmap
        - name: nginx-root
          hostPath:
            path: /Users/xiajie01/Develop/acg/agent-frontend
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: agent-api-service
  labels:
    app: agent-api-service
spec:
  type: NodePort
  selector:
    app: agent-api
  ports:
  - port: 8088
    targetPort: 8088
    nodePort: 30088
    name: nginx
  - port: 8188
    targetPort: 8188
    nodePort: 30188
    name: api
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
data:
  default.conf: |-
    server {
        listen       8088;
        root   /usr/share/nginx/html;

        location / {
            index  index.html index.htm;
        }
    
        location /socket.io {
            proxy_pass http://127.0.0.1:8188;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header X-Real-IP $remote_addr;
        }
    
        location /agent/api {
            proxy_pass http://127.0.0.1:8188;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        location /v2/app/conversation {
            proxy_pass https://36.110.192.244;
            proxy_set_header Host "qianfan.baidubce.com";
        }
    }